import { promises as fs } from 'fs';
import { join } from 'path';
import { calcBBox } from '../action/util';
import { GeoJsonFeature } from '../types';

// go to https://www.google.com/maps/d/u/0/edit?mid=1yj8Bcn6fQF8JL_z13IBIoSMTGjeCrB8Q&usp=sharing,
// export as KML, save to data/Sectors.kml
// run `yarn ts-node src/scripts/kmlToSector`
// this will update the file static/sectors.json

async function main() {
  const file = await fs.readFile(
    join(__dirname, '../../data/Sectors.kml'),
    'utf8',
  );

  const sectors = file
    .split('<Placemark>')
    .slice(1)
    .map((xml) => {
      const name = xml.split('<name>')[1].split('</name>')[0];
      const coords = xml
        .split('<coordinates>')[1]
        .split('</coordinates>')[0]
        .split('\n')
        .flatMap((str): GeoJsonFeature | false => {
          if (!str) return false;
          const [lng, lat] = str.split(',');
          if (!lng || !lat) return false;

          return {
            type: 'Feature',
            geometry: {
              type: 'Point',
              coordinates: [+lng.trim(), +lat.trim()],
            },
            properties: {},
            id: '',
          };
        })
        .filter((x): x is GeoJsonFeature => !!x);
      return { name, bbox: calcBBox(coords) };
    });

  const output = {
    __comment:
      'THIS FILE IS AUTOGENERATED, DO NOT EDIT IT DIRECTLY. See kmlToSector.ts',
    sectors,
  };

  await fs.writeFile(
    join(__dirname, '../../static/sectors.json'),
    JSON.stringify(output, null, 2),
  );
}

main();
